{"ast":null,"code":"var _jsxFileName = \"/Users/jouni/fullstack/osa1/1.6-unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst History = _ref => {\n  let {\n    good,\n    neutral,\n    bad,\n    feedback\n  } = _ref;\n  console.log('feedback:', feedback.join(','));\n  if (feedback.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"the app is used by pressing the buttons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), \"good: \", good, \"neutral: \", neutral, \"bad: \", bad]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = History;\nconst App = () => {\n  _s();\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleGoodClick = () => setGood(good + 1);\n  const handleNeutralClick = () => setNeutral(neutral + 1);\n  const handleBadClick = () => setBad(bad + 1);\n  const Button = _ref2 => {\n    let {\n      handleClick,\n      text\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGoodClick,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutralClick,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBadClick,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(History, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      feedback: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"History\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","History","good","neutral","bad","feedback","console","log","join","length","App","setGood","setNeutral","setBad","handleGoodClick","handleNeutralClick","handleBadClick","Button","handleClick","text"],"sources":["/Users/jouni/fullstack/osa1/1.6-unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\n\nconst History = ({good, neutral, bad, feedback}) => {\n  console.log('feedback:', feedback.join(','))\n  if (feedback.length === 0) {\n    return (\n      <div>\n        the app is used by pressing the buttons\n      </div>\n    )\n  }\n  \n  return (\n    <div>\n      <h1>statistics</h1>\n      good: {good}\n      neutral: {neutral}\n      bad: {bad}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () => setGood(good + 1)\n  const handleNeutralClick = () => setNeutral(neutral + 1)\n  const handleBadClick = () => setBad(bad + 1)\n\n  const Button = ({ handleClick, text }) => (\n    <button onClick={handleClick}>\n      {text}\n    </button>\n  )\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n        <Button handleClick={handleGoodClick} text=\"good\" />\n        <Button handleClick={handleNeutralClick} text=\"neutral\" />\n        <Button handleClick={handleBadClick} text=\"bad\" />\n        <History good={good} neutral={neutral} bad={bad} feedback={feedback} />\n    </div>\n  )\n}\n\nexport default App\n\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA;AAGhC,MAAMC,OAAO,GAAG,QAAoC;EAAA,IAAnC;IAACC,IAAI;IAAEC,OAAO;IAAEC,GAAG;IAAEC;EAAQ,CAAC;EAC7CC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,QAAQ,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC;EAC5C,IAAIH,QAAQ,CAACI,MAAM,KAAK,CAAC,EAAE;IACzB,oBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEM;EAEV;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,YACZP,IAAI,eACDC,OAAO,WACXC,GAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAA,KAlBKH,OAAO;AAoBb,MAAMS,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACR,IAAI,EAAES,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACG,OAAO,EAAES,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACI,GAAG,EAAES,MAAM,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMc,eAAe,GAAG,MAAMH,OAAO,CAACT,IAAI,GAAG,CAAC,CAAC;EAC/C,MAAMa,kBAAkB,GAAG,MAAMH,UAAU,CAACT,OAAO,GAAG,CAAC,CAAC;EACxD,MAAMa,cAAc,GAAG,MAAMH,MAAM,CAACT,GAAG,GAAG,CAAC,CAAC;EAE5C,MAAMa,MAAM,GAAG;IAAA,IAAC;MAAEC,WAAW;MAAEC;IAAK,CAAC;IAAA,oBACnC;MAAQ,OAAO,EAAED,WAAY;MAAA,UAC1BC;IAAI;MAAA;MAAA;MAAA;IAAA,QACE;EAAA,CACV;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACpB,QAAC,MAAM;MAAC,WAAW,EAAEL,eAAgB;MAAC,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACpD,QAAC,MAAM;MAAC,WAAW,EAAEC,kBAAmB;MAAC,IAAI,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1D,QAAC,MAAM;MAAC,WAAW,EAAEC,cAAe;MAAC,IAAI,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eAClD,QAAC,OAAO;MAAC,IAAI,EAAEd,IAAK;MAAC,OAAO,EAAEC,OAAQ;MAAC,GAAG,EAAEC,GAAI;MAAC,QAAQ,EAAEC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACrE;AAEV,CAAC;AAAA,GAxBKK,GAAG;AAAA,MAAHA,GAAG;AA0BT,eAAeA,GAAG;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}